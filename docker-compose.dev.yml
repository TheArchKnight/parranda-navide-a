version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev.backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env  # Cargar explícitamente el archivo .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - ./backend:/app  # Montar el código del backend para desarrollo
      - ./media:/app/media  # Persistencia de imágenes en la carpeta media
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]  # Iniciar con recarga automática en desarrollo
    restart: always  # Reiniciar siempre el contenedor si se detiene

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app  # Montar el código del frontend para desarrollo
      - /app/node_modules  # Volumen para evitar sobreescribir node_modules
    env_file:
      - .env  # Cargar explícitamente el archivo .env
    environment:
      - VITE_BACKEND_URL=http://localhost:8000  # URL del backend para React (Vite usa VITE_ prefix)
      - VITE_CLOUDINARY_CLOUD_NAME=${VITE_CLOUDINARY_CLOUD_NAME}
      - VITE_CLOUDINARY_UPLOAD_PRESET=${VITE_CLOUDINARY_UPLOAD_PRESET}

    restart: always  # Reiniciar siempre el contenedor si se detiene

  db:
    image: postgres:15
    container_name: postgres_db
    env_file:
      - .env  # Cargar explícitamente el archivo .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistencia de los datos de PostgreSQL
    restart: always  # Reiniciar siempre el contenedor si se detiene

volumes:
  postgres_data:
  media:  # Volumen persistente para imágenes
